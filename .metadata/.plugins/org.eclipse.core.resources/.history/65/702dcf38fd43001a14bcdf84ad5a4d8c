package com.rk.customer;

import com.rk.model.Account;

public class AccountHolder implements Runnable {

	private Account account;

	public AccountHolder(Account account) {
		this.account = account;
	}

	private void makewithdraw(int withDrawAmount) {

		if (account.getBalance() >= withDrawAmount) {
			System.out.println(Thread.currentThread().getName() + "\tis withdrawing from Acccount" + withDrawAmount);
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
			}
			account.withdraw(withDrawAmount);
			System.out.println(Thread.currentThread().getName() + "\tWithDrawed" + withDrawAmount);
			try {
				Thread.sleep(1000);
			} catch (Exception e) {
			}
		} else {
			System.out.println("No funds" + withDrawAmount + Thread.currentThread().getName());
			System.out.println("Current balance is " + account.getBalance());
		}
	}

	@Override
	public void run() {

		for (int i = 1; i <= 4; i++) {

			makewithdraw(2000);
			if (account.getBalance() < 0) {

				System.out.println("account is overdrawen");
			}
		}

	}
}
